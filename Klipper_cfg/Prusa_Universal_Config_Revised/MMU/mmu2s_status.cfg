[gcode_macro MMU_DISPLAY_ERROR]
gcode:
    M118 Error Report
    M118 Retry load     : {printer["gcode_macro _MMU_ERROR_INCREMENT_LOAD"].error_retry_load}
    M118 Retry unload   : {printer["gcode_macro _MMU_ERROR_INCREMENT_UNLOAD"].error_retry_unload}
    M118 Intervention   : {printer["gcode_macro _MMU_ERROR_INCREMENT_PAUSE"].error_retry_pause}
	{% if printer["gcode_macro _VAR_MMU2S"].enable_led|int == 1 %}
    RUN_SHELL_COMMAND CMD=LED_MMU_NOK
    SET_LED LED=my_neopixel RED=0.8 GREEN=0.0 BLUE=0.0 TRANSMIT=1
	{% endif %}

[gcode_macro _MMU_ERROR_INCREMENT_LOAD]
variable_error_retry_load: 0
gcode:
   {% set error = error_retry_load + 1 %}
   SET_GCODE_VARIABLE MACRO=_MMU_ERROR_INCREMENT_LOAD VARIABLE=error_retry_load VALUE={error}

[gcode_macro _MMU_ERROR_INCREMENT_UNLOAD]
variable_error_retry_unload: 0
gcode:
   {% set error = error_retry_unload + 1 %}
   SET_GCODE_VARIABLE MACRO=_MMU_ERROR_INCREMENT_UNLOAD VARIABLE=error_retry_unload VALUE={error}

[gcode_macro _MMU_ERROR_INCREMENT_PAUSE]
variable_error_retry_pause: 0
gcode:
   {% set error = error_retry_pause + 1 %}
   SET_GCODE_VARIABLE MACRO=_MMU_ERROR_INCREMENT_PAUSE VARIABLE=error_retry_pause VALUE={error}

###############################
#
# MMU2S endstop status : IR extruder, FINDA, selector switch
# 0 : open, 1 : TRIGGERED
#
###############################

[gcode_macro MMU_ENDSTOPS_STATUS]
description: Display the last queried status
gcode:
    M118 Endstop Report
    M118 Extruder : {printer["filament_switch_sensor ir_sensor"].filament_detected}
    M118 FINDA    : {printer["filament_switch_sensor finda"].filament_detected}
    M118 Selector : {printer.query_endstops.last_query["manual_stepper selector_stepper"]}

[gcode_macro MMU_INFOS]
description: Query and display the status
gcode:
    QUERY_ENDSTOPS
    MMU_ENDSTOPS_STATUS

###############################
#
# PAUSE MACROS
# MMU_PAUSE is called when an human intervention is needed
# use MMU_UNLOCK to park the idler and start the manual intervention
# and use RESUME when the invention is ended to resume the current print
#
###############################

[pause_resume]
#recover_velocity: 50.

[delayed_gcode disable_heater]
gcode:
    {% if printer["gcode_macro MMU_PAUSE"].is_paused|int != 0 %}
    M118 Disable extruder heater
    M104 S0
    {% endif %}

# Modify the timeout of the printer accordingly to timeout_pause
[gcode_macro MMU_PAUSE]
description: Park extruder at parking position, Save the current state and start delayed stop of the heatbed
variable_is_paused: 0
variable_extruder_temp: 0
gcode:
    M118 Locking MMU
    SET_GCODE_VARIABLE MACRO=MMU_PAUSE VARIABLE=extruder_temp VALUE={printer.extruder.temperature}
    SET_GCODE_VARIABLE MACRO=MMU_PAUSE VARIABLE=is_paused VALUE=1
    SAVE_GCODE_STATE NAME=MMU_PAUSE_state
    SET_IDLE_TIMEOUT TIMEOUT={printer["gcode_macro _VAR_MMU2S"].timeout_pause}
    UPDATE_DELAYED_GCODE ID=disable_heater DURATION={printer["gcode_macro _VAR_MMU2S"].disable_heater}
    M118 Pausing Print
    _MMU_ERROR_INCREMENT_PAUSE
    M300
    M300
    M300
    PAUSE
    G4 P2000
    M400
    G91
    G1 Z{printer["gcode_macro _VAR_MMU2S"].pause_z}
    G90
    G1 X{printer["gcode_macro _VAR_MMU2S"].pause_x} Y{printer["gcode_macro _VAR_MMU2S"].pause_y} F3000
    RESTORE_GCODE_STATE NAME=MMU_PAUSE_state MOVE=1

###############################################
[delayed_gcode clear_display]
initial_duration: 0.
gcode:
    M117
