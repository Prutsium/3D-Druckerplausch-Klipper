[menu __main __mmu]
type: list
enable: {printer["gcode_macro _VARS_PRINTER"].enable_mmu|int == 1}
name: MMU

# Ideen
# 
# Home MMU -> falls gehomed, Rückfrage ob Force
# Nur Idler homen
# Nur Selector homen
# Idler stumpf auf Slot 0-4 setzen
# Idler "wegnehmen"
# Finda <-> IR-Sensor Abstand kalibrieren + speichern, zusätzlich noch den Weg bis zur Nozzle einstellbar machen
# Falls Filament in Finda (und/oder Extruder), aktiven Slot auswählen, falls ne Aktion gemacht wird?
# 
# Aus Marlin:
# 
# Load to Nozzle (auch zu Finda und Extruder?)
# Unload to Finda + Eject from MMU


[menu __main __mmu __tool]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {"Tool: %i (%i)" % (menu.input, printer["gcode_macro MMU_SELECT_TOOL"].color_selected)}
input: {printer["gcode_macro MMU_SELECT_TOOL"].color_selected|int}
input_min: 0
input_max: 4
input_step: 1
gcode:
    {% if not menu.input|int == printer["gcode_macro MMU_SELECT_TOOL"].color_selected|int and not menu.input|int == -1 %}
        MMU_CHANGE_TOOL VALUE={menu.input}
    {% endif %}

[menu __main __mmu __home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Home MMU
gcode: MMU_HOME

[menu __main __mmu __force_home]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Force Home MMU
gcode: MMU_HOME_FORCE

[menu __main __mmu __cut]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {"Cut Filament %i" % (menu.input)}
input: {printer["gcode_macro MMU_SELECT_TOOL"].color_selected|int}
input_min: 0
input_max: 4
input_step: 1
gcode: MMU_CUT_FILAMENT VALUE={menu.input}

[menu __main __mmu __unlock]
type: command
enable: {not printer["gcode_macro MMU_PAUSE"].is_paused|int == 0}
name: Unlock MMU
gcode: MMU_UNLOCK

[menu __main __mmu __tests]
type: list
enable: {not printer.idle_timeout.state == "Printing"}
name: Tests

[menu __main __mmu __tests __load]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Test Load
gcode: MMU_TEST_LOAD

[menu __main __mmu __tests __idler]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {"Move Idler: %i" % (menu.input)}
input: {printer["gcode_macro MMU_SELECT_TOOL"].color_selected|int}
input_min: -1
input_max: 4
input_step: 1
gcode:
    MMU_MOVE_IDLER VALUE={menu.input}

[menu __main __mmu __tests __selector]
type: input
enable: {not printer.idle_timeout.state == "Printing"}
name: {"Move Sel: %i" % (menu.input)}
input: {printer["gcode_macro MMU_SELECT_TOOL"].color_selected|int}
input_min: -1
input_max: 4
input_step: 1
gcode:
    MMU_MOVE_SELECTOR VALUE={menu.input}